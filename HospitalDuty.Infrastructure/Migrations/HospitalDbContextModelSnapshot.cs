// <auto-generated />
using System;
using HospitalDuty.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalDuty.Infrastructure.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    partial class HospitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1111111-1111-1111-1111-111111111111"),
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "Acil Servis"
                        },
                        new
                        {
                            Id = new Guid("d2222222-2222-2222-2222-222222222222"),
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "Kardiyoloji"
                        },
                        new
                        {
                            Id = new Guid("d3333333-3333-3333-3333-333333333333"),
                            HospitalId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "Nöroloji"
                        },
                        new
                        {
                            Id = new Guid("d4444444-4444-4444-4444-444444444444"),
                            HospitalId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "Ortopedi"
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HospitalId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1111111-1111-1111-1111-111111111111"),
                            DepartmentId = new Guid("d1111111-1111-1111-1111-111111111111"),
                            Email = "mehmet.yilmaz@ankarashehir.gov.tr",
                            FirstName = "Mehmet",
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            LastName = "Yılmaz",
                            PhoneNumber = "0532-111-1111",
                            ProfileImage = "mehmet.jpg",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("e2222222-2222-2222-2222-222222222222"),
                            DepartmentId = new Guid("d2222222-2222-2222-2222-222222222222"),
                            Email = "ayse.kaya@ankarashehir.gov.tr",
                            FirstName = "Ayşe",
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            LastName = "Kaya",
                            PhoneNumber = "0532-222-2222",
                            ProfileImage = "ayse.jpg",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("e3333333-3333-3333-3333-333333333333"),
                            DepartmentId = new Guid("d3333333-3333-3333-3333-333333333333"),
                            Email = "fatma.sahin@hacettepe.edu.tr",
                            FirstName = "Fatma",
                            HospitalId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastName = "Şahin",
                            PhoneNumber = "0532-333-3333",
                            ProfileImage = "fatma.jpg",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("e4444444-4444-4444-4444-444444444444"),
                            DepartmentId = new Guid("d4444444-4444-4444-4444-444444444444"),
                            Email = "ali.demir@hacettepe.edu.tr",
                            FirstName = "Ali",
                            HospitalId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LastName = "Demir",
                            PhoneNumber = "0532-444-4444",
                            ProfileImage = "ali.jpg",
                            Role = 2
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Hospital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DirectorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Hospitals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Address = "Üniversiteler Mahallesi, Bilkent Blv. No:1",
                            City = "Ankara",
                            District = "Çankaya",
                            Email = "info@ankarashehir.saglik.gov.tr",
                            Name = "Ankara Şehir Hastanesi",
                            Phone = "0312-552-6000",
                            Website = "www.ankarashehir.saglik.gov.tr"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Address = "Sıhhiye Kampüsü",
                            City = "Ankara",
                            District = "Altındağ",
                            Email = "info@hacettepe.edu.tr",
                            Name = "Hacettepe Üniversitesi Hastanesi",
                            Phone = "0312-305-1010",
                            Website = "www.hastaneler.hacettepe.edu.tr"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Address = "Emniyet Mahallesi, Muammer Yaşar Bostancı Cad.",
                            City = "Ankara",
                            District = "Yenimahalle",
                            Email = "info@gazi.edu.tr",
                            Name = "Gazi Üniversitesi Hastanesi",
                            Phone = "0312-202-5252",
                            Website = "www.tip.gazi.edu.tr"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Address = "Talatpaşa Bulvarı No:44",
                            City = "Ankara",
                            District = "Altındağ",
                            Email = "info@numune.saglik.gov.tr",
                            Name = "Ankara Numune Hastanesi",
                            Phone = "0312-508-4000",
                            Website = "www.numune.saglik.gov.tr"
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShiftType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HospitalId");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = new Guid("d1111111-1111-1111-1111-111111111111"),
                            EmployeeId = new Guid("e1111111-1111-1111-1111-111111111111"),
                            EndTime = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Notes = "Gündüz vardiyası",
                            ShiftType = 0,
                            StartTime = new DateTime(2025, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = new Guid("d2222222-2222-2222-2222-222222222222"),
                            EmployeeId = new Guid("e2222222-2222-2222-2222-222222222222"),
                            EndTime = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Notes = "Akşam vardiyası",
                            ShiftType = 2,
                            StartTime = new DateTime(2025, 1, 1, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = new Guid("d3333333-3333-3333-3333-333333333333"),
                            EmployeeId = new Guid("e3333333-3333-3333-3333-333333333333"),
                            EndTime = new DateTime(2025, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            HospitalId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Notes = "Gece vardiyası",
                            ShiftType = 1,
                            StartTime = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = new Guid("d4444444-4444-4444-4444-444444444444"),
                            EmployeeId = new Guid("e4444444-4444-4444-4444-444444444444"),
                            EndTime = new DateTime(2025, 1, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            HospitalId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Notes = "Nöbet vardiyası",
                            ShiftType = 1,
                            StartTime = new DateTime(2025, 1, 2, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Hospital", "Hospital")
                        .WithMany("Departments")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalDuty.Domain.Entities.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Hospital");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalDuty.Domain.Entities.Hospital", "Hospital")
                        .WithMany("Employees")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Hospital", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Employee", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Director");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Shift", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Department", "Department")
                        .WithMany("Shifts")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalDuty.Domain.Entities.Employee", "Employee")
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalDuty.Domain.Entities.Hospital", "Hospital")
                        .WithMany("Shifts")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Hospital", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");

                    b.Navigation("Shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
