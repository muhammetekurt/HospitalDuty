// <auto-generated />
using System;
using HospitalDuty.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalDuty.Infrastructure.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    partial class HospitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ManagerId = new Guid("66666666-6666-6666-6666-666666666666"),
                            Name = "Acil Servis"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ManagerId = new Guid("77777777-7777-7777-7777-777777777777"),
                            Name = "Dahiliye"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            HospitalId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ManagerId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Name = "Genel Cerrahi"
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            DepartmentId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Email = "mehmet.ozkan@ankarashehir.gov.tr",
                            FirstName = "Mehmet",
                            LastName = "Özkan",
                            PhoneNumber = "0532 111 11 11",
                            ProfileImage = "",
                            Role = 0
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            DepartmentId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Email = "ayse.demir@ankarashehir.gov.tr",
                            FirstName = "Ayşe",
                            LastName = "Demir",
                            PhoneNumber = "0532 222 22 22",
                            ProfileImage = "",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            DepartmentId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Email = "ali.yilmaz@ankarashehir.gov.tr",
                            FirstName = "Ali",
                            LastName = "Yılmaz",
                            PhoneNumber = "0532 333 33 33",
                            ProfileImage = "",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            DepartmentId = new Guid("55555555-5555-5555-5555-555555555555"),
                            Email = "fatma.kaya@ankarashehir.gov.tr",
                            FirstName = "Fatma",
                            LastName = "Kaya",
                            PhoneNumber = "0532 444 44 44",
                            ProfileImage = "",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            DepartmentId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Email = "mustafa.celik@ankarashehir.gov.tr",
                            FirstName = "Mustafa",
                            LastName = "Çelik",
                            PhoneNumber = "0532 555 55 55",
                            ProfileImage = "",
                            Role = 4
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            DepartmentId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Email = "zeynep.arslan@ankarashehir.gov.tr",
                            FirstName = "Zeynep",
                            LastName = "Arslan",
                            PhoneNumber = "0532 666 66 66",
                            ProfileImage = "",
                            Role = 4
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            DepartmentId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Email = "can.guven@ankarashehir.gov.tr",
                            FirstName = "Can",
                            LastName = "Güven",
                            PhoneNumber = "0532 777 77 77",
                            ProfileImage = "",
                            Role = 4
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            DepartmentId = new Guid("55555555-5555-5555-5555-555555555555"),
                            Email = "selin.aktas@ankarashehir.gov.tr",
                            FirstName = "Selin",
                            LastName = "Aktaş",
                            PhoneNumber = "0532 888 88 88",
                            ProfileImage = "",
                            Role = 4
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Hospital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Address = "Üniversiteler Mahallesi Bilkent Bulvarı",
                            City = "Ankara",
                            DirectorId = new Guid("22222222-2222-2222-2222-222222222222"),
                            District = "Çankaya",
                            Email = "info@ankarashehir.gov.tr",
                            Name = "Ankara Şehir Hastanesi",
                            Phone = "0312 123 45 67",
                            Website = "www.ankarashehir.gov.tr"
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Shift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShiftType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            DepartmentId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EmployeeId = new Guid("66666666-6666-6666-6666-666666666666"),
                            EndTime = new DateTime(2025, 8, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Sabah vardiyası",
                            ShiftType = 0,
                            StartTime = new DateTime(2025, 8, 22, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            DepartmentId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EmployeeId = new Guid("99999999-9999-9999-9999-999999999999"),
                            EndTime = new DateTime(2025, 8, 23, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Gece vardiyası",
                            ShiftType = 1,
                            StartTime = new DateTime(2025, 8, 22, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            DepartmentId = new Guid("44444444-4444-4444-4444-444444444444"),
                            EmployeeId = new Guid("77777777-7777-7777-7777-777777777777"),
                            EndTime = new DateTime(2025, 8, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Günlük mesai",
                            ShiftType = 0,
                            StartTime = new DateTime(2025, 8, 22, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Hospital", null)
                        .WithMany("Departments")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Department", null)
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Shift", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Department", null)
                        .WithMany("Shifts")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalDuty.Domain.Entities.Employee", null)
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Hospital", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
