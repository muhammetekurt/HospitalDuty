// <auto-generated />
using System;
using HospitalDuty.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalDuty.Infrastructure.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20250822204103_InitialCreateWithSeedData")]
    partial class InitialCreateWithSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("409f37a0-622d-4e9c-a92a-320ccbf98ca8"),
                            HospitalId = new Guid("2cdc5e58-fd44-4f8c-bbd4-fc19e91b3cfc"),
                            ManagerId = new Guid("f2390eea-b584-4cb5-8f07-edab98aa1673"),
                            Name = "Acil Servis"
                        },
                        new
                        {
                            Id = new Guid("946abea1-0c11-4f0e-9d2d-22d7967b894a"),
                            HospitalId = new Guid("2cdc5e58-fd44-4f8c-bbd4-fc19e91b3cfc"),
                            ManagerId = new Guid("699f05d0-376b-4110-b628-59cab733e7e8"),
                            Name = "Dahiliye"
                        },
                        new
                        {
                            Id = new Guid("91fdcfdb-8868-4ed1-a80b-672d3e7e1a19"),
                            HospitalId = new Guid("2cdc5e58-fd44-4f8c-bbd4-fc19e91b3cfc"),
                            ManagerId = new Guid("bc985e6b-274b-4928-996b-f4bfa0063dbe"),
                            Name = "Genel Cerrahi"
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c25eb38-fdd7-4e1e-a22a-cdbd89833f45"),
                            DepartmentId = new Guid("409f37a0-622d-4e9c-a92a-320ccbf98ca8"),
                            Email = "mehmet.ozkan@ankarashehir.gov.tr",
                            FirstName = "Mehmet",
                            LastName = "Özkan",
                            PhoneNumber = "0532 111 11 11",
                            ProfileImage = "",
                            Role = 0
                        },
                        new
                        {
                            Id = new Guid("f2390eea-b584-4cb5-8f07-edab98aa1673"),
                            DepartmentId = new Guid("409f37a0-622d-4e9c-a92a-320ccbf98ca8"),
                            Email = "ayse.demir@ankarashehir.gov.tr",
                            FirstName = "Ayşe",
                            LastName = "Demir",
                            PhoneNumber = "0532 222 22 22",
                            ProfileImage = "",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("699f05d0-376b-4110-b628-59cab733e7e8"),
                            DepartmentId = new Guid("946abea1-0c11-4f0e-9d2d-22d7967b894a"),
                            Email = "ali.yilmaz@ankarashehir.gov.tr",
                            FirstName = "Ali",
                            LastName = "Yılmaz",
                            PhoneNumber = "0532 333 33 33",
                            ProfileImage = "",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("bc985e6b-274b-4928-996b-f4bfa0063dbe"),
                            DepartmentId = new Guid("91fdcfdb-8868-4ed1-a80b-672d3e7e1a19"),
                            Email = "fatma.kaya@ankarashehir.gov.tr",
                            FirstName = "Fatma",
                            LastName = "Kaya",
                            PhoneNumber = "0532 444 44 44",
                            ProfileImage = "",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("8dd89b10-5b55-4be4-8dd8-1d488a85aa60"),
                            DepartmentId = new Guid("409f37a0-622d-4e9c-a92a-320ccbf98ca8"),
                            Email = "mustafa.celik@ankarashehir.gov.tr",
                            FirstName = "Mustafa",
                            LastName = "Çelik",
                            PhoneNumber = "0532 555 55 55",
                            ProfileImage = "",
                            Role = 4
                        },
                        new
                        {
                            Id = new Guid("120cff6b-7ec0-4ff9-acd5-691820056ce7"),
                            DepartmentId = new Guid("409f37a0-622d-4e9c-a92a-320ccbf98ca8"),
                            Email = "zeynep.arslan@ankarashehir.gov.tr",
                            FirstName = "Zeynep",
                            LastName = "Arslan",
                            PhoneNumber = "0532 666 66 66",
                            ProfileImage = "",
                            Role = 4
                        },
                        new
                        {
                            Id = new Guid("d80a56b0-1bef-425d-a5fa-93cd96bcffb5"),
                            DepartmentId = new Guid("946abea1-0c11-4f0e-9d2d-22d7967b894a"),
                            Email = "can.guven@ankarashehir.gov.tr",
                            FirstName = "Can",
                            LastName = "Güven",
                            PhoneNumber = "0532 777 77 77",
                            ProfileImage = "",
                            Role = 4
                        },
                        new
                        {
                            Id = new Guid("1f7e7409-8ae0-4b35-8b1a-ef906f0a31c8"),
                            DepartmentId = new Guid("91fdcfdb-8868-4ed1-a80b-672d3e7e1a19"),
                            Email = "selin.aktas@ankarashehir.gov.tr",
                            FirstName = "Selin",
                            LastName = "Aktaş",
                            PhoneNumber = "0532 888 88 88",
                            ProfileImage = "",
                            Role = 4
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Hospital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2cdc5e58-fd44-4f8c-bbd4-fc19e91b3cfc"),
                            Address = "Üniversiteler Mahallesi Bilkent Bulvarı",
                            City = "Ankara",
                            DirectorId = new Guid("1c25eb38-fdd7-4e1e-a22a-cdbd89833f45"),
                            District = "Çankaya",
                            Email = "info@ankarashehir.gov.tr",
                            Name = "Ankara Şehir Hastanesi",
                            Phone = "0312 123 45 67",
                            Website = "www.ankarashehir.gov.tr"
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Shift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShiftType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3780220-9be9-4afb-8ca9-92ab42fc9435"),
                            DepartmentId = new Guid("409f37a0-622d-4e9c-a92a-320ccbf98ca8"),
                            EmployeeId = new Guid("f2390eea-b584-4cb5-8f07-edab98aa1673"),
                            EndTime = new DateTime(2025, 8, 22, 16, 0, 0, 0, DateTimeKind.Local),
                            Notes = "Sabah vardiyası",
                            ShiftType = 1,
                            StartTime = new DateTime(2025, 8, 22, 8, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("71dbe74d-0c45-492e-886f-d3a9ff0e1064"),
                            DepartmentId = new Guid("409f37a0-622d-4e9c-a92a-320ccbf98ca8"),
                            EmployeeId = new Guid("1c25eb38-fdd7-4e1e-a22a-cdbd89833f45"),
                            EndTime = new DateTime(2025, 8, 23, 8, 0, 0, 0, DateTimeKind.Local),
                            Notes = "Gece vardiyası",
                            ShiftType = 2,
                            StartTime = new DateTime(2025, 8, 22, 16, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("8f44f9dc-a942-4354-8106-c8c949dbac9e"),
                            DepartmentId = new Guid("946abea1-0c11-4f0e-9d2d-22d7967b894a"),
                            EmployeeId = new Guid("699f05d0-376b-4110-b628-59cab733e7e8"),
                            EndTime = new DateTime(2025, 8, 22, 17, 0, 0, 0, DateTimeKind.Local),
                            Notes = "Günlük mesai",
                            ShiftType = 0,
                            StartTime = new DateTime(2025, 8, 22, 9, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Hospital", null)
                        .WithMany("Departments")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Department", null)
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Shift", b =>
                {
                    b.HasOne("HospitalDuty.Domain.Entities.Department", null)
                        .WithMany("Shifts")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalDuty.Domain.Entities.Employee", null)
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("HospitalDuty.Domain.Entities.Hospital", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
